{"version":3,"sources":["GoodsList.jsx","App.js","index.js"],"names":["GoodsList","state","goods","props","reverse","setState","sortAlphabetically","sort","good1","good2","localeCompare","sortByLength","length","reset","className","this","map","good","key","type","onClick","React","Component","goodsFromServer","App","isGoodsListVisible","showGoodsList","ReactDOM","render","document","getElementById"],"mappings":"yPAKaA,G,MAAb,4MACEC,MAAQ,CACNC,MAAM,YAAK,EAAKC,MAAMD,QAF1B,EAKEE,QAAU,kBACR,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CACtBC,MAAO,YAAID,EAAMC,OAAOE,eAP9B,EAWEE,mBAAqB,kBACnB,EAAKD,UAAS,SAAAJ,GAAK,MAAK,CACtBC,MAAO,YAAID,EAAMC,OACdK,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,WAdpD,EAkBEE,aAAe,kBACb,EAAKN,UAAS,SAAAJ,GAAK,MAAK,CACtBC,MAAO,YAAID,EAAMC,OACdK,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,eArBrD,EAyBEC,MAAQ,kBACN,EAAKR,SAAS,CACZH,MAAM,YAAK,EAAKC,MAAMD,UA3B5B,4CA+BE,WACE,OACE,yBAAKY,UAAU,WACb,yBAAKA,UAAU,aACb,4BACGC,KAAKd,MAAMC,MAAMc,KAAI,SAAAC,GAAI,OACxB,wBAAIH,UAAU,OAAOI,IAAKD,GAAOA,OAIrC,yBAAKH,UAAU,WACb,4BACEK,KAAK,SACLL,UAAU,kCACVM,QAASL,KAAKX,SAHhB,WAQA,4BACEe,KAAK,SACLL,UAAU,kCACVM,QAASL,KAAKT,oBAHhB,uBAQA,4BACEa,KAAK,SACLL,UAAU,kCACVM,QAASL,KAAKJ,cAHhB,mBAQF,4BACEQ,KAAK,SACLL,UAAU,mDACVM,QAASL,KAAKF,OAHhB,eAlEV,GAA+BQ,IAAMC,YCC/BC,G,YAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGWC,EAAb,4MACEvB,MAAQ,CACNwB,oBAAoB,GAFxB,EAKEC,cAAgB,kBACd,EAAKrB,UAAS,SAAAJ,GAAK,MAAK,CACtBwB,oBAAqBxB,EAAMwB,wBAPjC,4CAWE,WACE,OACE,yBAAKX,UAAU,OACb,wBAAIA,UAAU,SAAd,UAECC,KAAKd,MAAMwB,mBAER,kBAAC,EAAD,CAAWvB,MAAOqB,IAGlB,4BACEJ,KAAK,SACLL,UAAU,oDACVM,QAASL,KAAKW,eAHhB,cArBZ,GAAyBL,IAAMC,WCf/BK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ddf31247.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './GoodsList.css';\n\nexport class GoodsList extends React.Component {\n  state = {\n    goods: [...this.props.goods],\n  }\n\n  reverse = () => (\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }))\n  )\n\n  sortAlphabetically = () => (\n    this.setState(state => ({\n      goods: [...state.goods]\n        .sort((good1, good2) => good1.localeCompare(good2)),\n    }))\n  )\n\n  sortByLength = () => (\n    this.setState(state => ({\n      goods: [...state.goods]\n        .sort((good1, good2) => good1.length - good2.length),\n    }))\n  )\n\n  reset = () => (\n    this.setState({\n      goods: [...this.props.goods],\n    })\n  )\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"container\">\n          <ul>\n            {this.state.goods.map(good => (\n              <li className=\"item\" key={good}>{good}</li>\n            ))}\n          </ul>\n\n          <div className=\"columns\">\n            <button\n              type=\"button\"\n              className=\"column button is-dark is-medium\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"column button is-dark is-medium\"\n              onClick={this.sortAlphabetically}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"column button is-dark is-medium\"\n              onClick={this.sortByLength}\n            >\n              Sort by length\n            </button>\n          </div>\n          <button\n            type=\"button\"\n            className=\"button is-hovered is-danger is-outlined is-large\"\n            onClick={this.reset}\n          >\n            Reset\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport { GoodsList } from './GoodsList';\n\nimport 'bulma/css/bulma.css';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends React.Component {\n  state = {\n    isGoodsListVisible: false,\n  }\n\n  showGoodsList = () => (\n    this.setState(state => ({\n      isGoodsListVisible: !state.isGoodsListVisible,\n    }))\n  )\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">Goods:</h1>\n\n        {this.state.isGoodsListVisible\n          ? (\n            <GoodsList goods={goodsFromServer} />\n          )\n          : (\n            <button\n              type=\"button\"\n              className=\"button is-hovered is-primary is-outlined is-large\"\n              onClick={this.showGoodsList}\n            >\n              Start\n            </button>\n          )\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}